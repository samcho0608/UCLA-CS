Name: Sungmin Cho
UCID: 205124669
Assignment 7
Lab
--------------------

I initialized git on the CS35L directory previously
so I did not have to initiate git.

--------------------

To get a copy of the Diffutils folder, I used the
following git command:

git clone ~eggert/src/gnu/diffutils

which created diffutils diretory in the current
directory

--------------------

I then cd'ed into the created directory and
got a log of it and outputed it into
git-log.txt file.

git log > git-log.txt

--------------------

To generate a list of tags used for Diffutils,
I employed the following command:

git tag > git-tags.txt

--------------------

Within the created git-log.txt file, I found
the hash id for the commit:

commit 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
Author: Paul Eggert <eggert@cs.ucla.edu>
Date:   Wed Jan 25 23:46:16 2012 -0800

    maint: quote 'like this' or "like this", not `like this'
    
    This is in response to a recent change in the GNU coding standards,
    which now suggest quoting 'like this' or "like this", instead of
    `like this' or ``like this''.
    * HACKING, NEWS, README, README-hacking, TODO, doc/diagmeet.note:
    * doc/diffutils.texi, ms/config.bat, ms/config.site:
    * src/analyze.c, src/cmp.c, src/context.c, src/diff.c:
    * src/diff.h, src/diff3.c, src/dir.c, src/ifdef.c, src/io.c:
    * src/sdiff.c, src/side.c, src/system.h, src/util.c:
    * tests/help-version:
    Quote 'like this' or "like this" in commentary.
    * cfg.mk (old_NEWS_hash): Adjust to reflect new NEWS quoting.
    * man/help2man: Update to 1.40.4 version, with quoting fixed as above.
    * po/en.po: Remove translation involving `, as it's no longer needed.
    * src/cmp.c (try_help, specify_ignore_initial, usage, main):
    * src/diff.c (main, try_help, option_help_msgid, specify_value)
    (compare_files):
    * src/diff3.c (main, try_help, option_help_msgid, usage)
    (read_diff):
    * src/dir.c (compare_names):
    * src/sdiff.c (try_help, usage, check_child_status, main):
    * src/util.c (finish_output):
    * tests/help-version:
    Quote 'like this' in output.

Then I created the patch file of this commit using
the following command:

git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f --stdout > quote-patch.txt

--------------------

I used the following command to check out version 3 branch:

git checkout v3.0

Then I patched the quote-patch.txt file with the following command:

patch -p1  < quote-patch.txt

--------------------

Skipped files:
    HACKING
    doc/diffutils.texi
    man/help2man

Other files:
    patching file ms/config.bat
    patching file ms/config.site
    Hunk #1 succeeded at 73 with fuzz 1.
    patching file po/en.po
    patching file src/analyze.c
    patching file src/cmp.c
    Hunk #1 succeeded at 36 with fuzz 1.
    Hunk #4 succeeded at 185 (offset -6 lines).
    Hunk #5 succeeded at 231 (offset -6 lines).
    Hunk #6 succeeded at 257 (offset -6 lines).
    Hunk #7 succeeded at 269 (offset -6 lines).
    Hunk #8 succeeded at 364 (offset -6 lines).
    Hunk #9 succeeded at 377 (offset -6 lines).
    patching file src/context.c
    Hunk #1 succeeded at 159 (offset 1 line).
    Hunk #2 succeeded at 289 (offset 1 line).
    Hunk #3 succeeded at 393 with fuzz 2 (offset 1 line).
    Hunk #4 succeeded at 431 (offset 1 line).
    Hunk #5 succeeded at 459 (offset 1 line).
    patching file src/diff.c
    Hunk #1 succeeded at 40 with fuzz 2 (offset -2 lines).
    Hunk #2 succeeded at 57 (offset -2 lines).
    Hunk #3 succeeded at 92 (offset -2 lines).
    Hunk #4 succeeded at 330 (offset -10 lines).
    Hunk #5 succeeded at 505 (offset -10 lines).
    Hunk #6 succeeded at 534 (offset -10 lines).
    Hunk #7 succeeded at 585 (offset -14 lines).
    Hunk #8 succeeded at 744 (offset -14 lines).
    Hunk #9 succeeded at 826 (offset -14 lines).
    Hunk #10 FAILED at 876.
    Hunk #11 FAILED at 906.
    Hunk #12 FAILED at 942.
    Hunk #13 succeeded at 960 with fuzz 2 (offset -29 lines).
    Hunk #14 succeeded at 1159 with fuzz 2 (offset -32 lines).
    3 out of 14 hunks FAILED -- saving rejects to file src/diff.c.rej
    patching file src/diff.h
    Hunk #2 succeeded at 126 with fuzz 2 (offset -13 lines).
    Hunk #3 succeeded at 202 (offset -13 lines).
    patching file src/diff3.c
    Hunk #1 succeeded at 35 (offset 1 line).
    Hunk #2 succeeded at 159 (offset 1 line).
    Hunk #3 succeeded at 316 (offset 1 line).
    Hunk #4 succeeded at 351 (offset 1 line).
    Hunk #5 succeeded at 412 (offset 1 line).
    Hunk #6 FAILED at 433.
    Hunk #7 succeeded at 460 with fuzz 2 (offset -18 lines).
    Hunk #8 succeeded at 1275 (offset -18 lines).
    Hunk #9 succeeded at 1475 (offset -18 lines).
    1 out of 9 hunks FAILED -- saving rejects to file src/diff3.c.rej
    patching file src/dir.c
    Hunk #1 succeeded at 84 (offset -1 lines).
    Hunk #2 succeeded at 125 (offset -1 lines).
    Hunk #3 succeeded at 154 (offset -1 lines).
    Hunk #4 succeeded at 234 (offset -1 lines).
    patching file src/ifdef.c
    patching file src/io.c
    patching file src/sdiff.c
    Hunk #2 succeeded at 92 (offset 1 line).
    Hunk #3 succeeded at 175 (offset 23 lines).
    Hunk #4 succeeded at 230 (offset 17 lines).
    Hunk #5 succeeded at 286 (offset 17 lines).
    Hunk #6 succeeded at 572 (offset 13 lines).
    Hunk #7 succeeded at 747 (offset 41 lines).
    patching file src/side.c
    patching file src/system.h
    Hunk #2 succeeded at 105 (offset 6 lines).
    patching file src/util.c
    Hunk #4 succeeded at 190 with fuzz 2.
    Hunk #8 succeeded at 650 (offset -27 lines).
    patching file tests/help-version
    Hunk #1 succeeded at 75 (offset 1 line).
    Hunk #2 succeeded at 85 (offset 1 line).
    Hunk #3 succeeded at 96 (offset 1 line).
    Hunk #4 succeeded at 108 (offset 1 line).
    Hunk #5 succeeded at 140 (offset 1 line).
    Hunk #6 succeeded at 188 (offset 1 line).

--------------------

# On branch practice
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   NEWS
#	modified:   README
#	modified:   TODO
#	modified:   doc/diagmeet.note
#	modified:   ms/config.bat
#	modified:   ms/config.site
#	modified:   po/en.po
#	modified:   src/analyze.c
#	modified:   src/cmp.c
#	modified:   src/context.c
#	modified:   src/diff.c
#	modified:   src/diff.h
#	modified:   src/diff3.c
#	modified:   src/dir.c
#	modified:   src/ifdef.c
#	modified:   src/io.c
#	modified:   src/sdiff.c
#	modified:   src/side.c
#	modified:   src/system.h
#	modified:   src/util.c
#	modified:   tests/help-version
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	NEWS.orig
#	README-hacking.orig
#	README-hacking.rej
#	README.orig
#	README.rej
#	cfg.mk.orig
#	cfg.mk.rej
#	ms/config.site.orig
#	src/cmp.c.orig
#	src/context.c.orig
#	src/diff.c.orig
#	src/diff.c.rej
#	src/diff.h.orig
#	src/diff3.c.orig
#	src/diff3.c.rej
#	src/dir.c.orig
#	src/sdiff.c.orig
#	src/system.h.orig
#	src/util.c.orig
#	tests/help-version.orig
no changes added to commit (use "git add" and/or "git commit -a")

--------------------

I reverted all the non-.c files by using the following command:

# revert all changes in a file
C-x v u
# save and exit out when done
C-x C-c

--------------------

With the .c files, I reverted all the character string
constants 

# show all the hunks
C-x v =
# scroll down to a hunk with character string

# to revert the change in the hunk
C-u C-c C-a

# save and exit out when done
C-x C-c

--------------------

# On branch practice
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   src/analyze.c
#	modified:   src/cmp.c
#	modified:   src/context.c
#	modified:   src/diff.c
#	modified:   src/diff3.c
#	modified:   src/dir.c
#	modified:   src/ifdef.c
#	modified:   src/io.c
#	modified:   src/sdiff.c
#	modified:   src/side.c
#	modified:   src/util.c
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	src/#analyze.c#
#	src/#cmp.c#
#	src/#util.c#
no changes added to commit (use "git add" and/or "git commit -a")

--------------------

git diff | wc -l

the above code gave the output of 321 which is within the
expected range.

git diff > ../quote-3.0-patch.txt

--------------------

After reading README-hacking, I edited the test/Makefile.am file.

I removed the following line towards the end of the file:
shell_or_perl_

I changed the permission on the no-newline-at-eof file.

chmod +x tests/binary tests/no-newline-at-eof

--------------------


The following commands were inputted to build
the modified version of diffutils:

./boostrap

wget http://web.cs.ucla.edu/classes/winter20/cs35L/assign/diffutils-gets.diff

patch -p0 < diffutils-gets.diff

./configure
make
make check

--------------------

The modified diff command seems to be working fine.

diff: cannot compare '-' to a directory

./src/diff: cannot compare '-' to a directory

diff --help outputs its manual percectly.

--------------------

I first created the directories using the following:

mkdir diffutils-3.0 diffutils-3.0-patch

Then copied source files into diffutils-3.0-patch
with the follwing command:

cp diffutils/src/*.c diffutils-3.0-patch

I then cloned the spec-provided diffutils into diffutils-3.0-org
directory to keep track of the original.

git clone ~eggert/src/gnu/diffutils diffutils-3.0-org

Then copied its source files into the diffutils-3.0 directory.

cp diffutils/src/*.c diffutils-3.0-patch

--------------------

Through the above commands, I now have obtained
source files for the diffutils-3.0-patch directory
and the diffutils-3.0 directory.

I ran the modified diff source file to collect
the difference between the two sets of source
files.

diffutils/src/diff -pru diffutils-3.0 diffutils-3.0-patch >quote-3.0-test.txt

Then I ran diff to find the differences between
quote-3.0-test.txt and quot-3.0-patch.txt

diff quote-3.0-test.txt quote-3.0-patch.txt

--------------------

There was an output meaning the two files are not
identical. 

However, none of the files had significant differences
other than the string constants that would not affect
the functionality, meaning they are innocuous.

